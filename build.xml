<project>
    <property file="build.properties"/>

    <target name="clean">
        <delete dir="${builddir}"/>
    </target>

    <target name="compile.main">
        <mkdir dir="${builddir}/classes"/>
        <javac includeantruntime="false" srcdir="${srcdir}" destdir="${builddir}/classes" classpath="."/>
    </target>

    <target name="compile.tests" depends="compile.main">
        <mkdir dir="${builddir}/tests" />
        <javac includeantruntime="false" srcdir="${testdir}" destdir="${builddir}/tests" classpath="${librarydir}/junit-4.13.2.jar;${builddir}/classes/." />
    </target>

    <target name="compile" depends="compile.tests"/>

    <target name="build" depends="clean, compile">
        <mkdir dir="${builddir}/artifacts"/>
        <jar destfile="${builddir}/artifacts/${jarname}.jar" basedir="${builddir}/classes">
            <manifest>
                <attribute name="Created-By" value="${author}"/>
                <attribute name="Main-Class" value="${main.class.dir}"/>
                <section name="src/root/beans/"/>
                <attribute name="Specification-Title" value="${specification.title}"/>
                <attribute name="Specification-Version" value="${specification.version}"/>
                <attribute name="Specification-Vendor" value="${specification.vendor}"/>
                <attribute name="Implementation-Title" value="${implementation.title}"/>
                <attribute name="Implementation-Version" value="${implementation.version} ${implementation.time}"/>
                <attribute name="Implementation-Vendor" value="${implementation.vendor}"/>
            </manifest>
        </jar>
    </target>

    <!--    <target name="test.console" depends="clean, compile">-->
    <!--        <java classpath="lib/junit-4.13.2.jar;lib/hamcrest-core-1.3.jar;${builddir}/classes/.;${builddir}/tests/." classname="org.junit.runner.JUnitCore" args="${testsClasses}" />-->
    <!--    </target>-->

    <target name="test" depends="build">
        <junit haltonfailure="yes" haltonerror="yes">
            <classpath location="${librarydir}/junit-4.13.2.jar" />
            <classpath location="${librarydir}/hamcrest-core-1.3.jar" />
            <classpath location="${builddir}/classes/." />
            <classpath location="${builddir}/tests/." />
            <test name="root.beans.ResultBeanTest" />
            <test name="root.beans.AreaTestHittingBeanTest" />
        </junit>
    </target>

    <target name="native2ascii">
        <mkdir dir="${testdir}/root/beans/locals/ascii/russian"/>
        <native2ascii encoding="UTF-8" src="${testdir}/root/beans/locals/native/russian"
                      dest="${testdir}/root/beans/locals/ascii/russian" includes="**/*.properties" ext=".properties"/>
    </target>

    <target name="clean.native2ascii">
        <delete dir="${testdir}/root/beans/locals/ascii"/>
    </target>

    <target name="xml">
        <xmlvalidate failonerror="no" lenient="yes" warn="yes">
            <fileset dir="${reportdir}" includes="*.xml"/>
        </xmlvalidate>
    </target>

    <target name="report" depends="build">
        <mkdir dir="${reportdir}"/>
        <junit haltonfailure="yes" haltonerror="yes">
            <classpath location="${librarydir}/junit-4.13.2.jar" />
            <classpath location="${librarydir}/hamcrest-core-1.3.jar" />
            <classpath location="${builddir}/classes/." />
            <classpath location="${builddir}/tests/." />
            <formatter type="xml" />
            <test name="root.beans.ResultBeanTest" todir="${reportdir}" />
            <test name="root.beans.AreaTestHittingBeanTest" todir="${reportdir}" />
        </junit>

        <exec executable="svn" failifexecutionfails="yes" failonerror="yes">
            <arg value="add"/>
            <arg value="${reportdir}"/>
            <arg value="--username ${username}"/>
            <arg value="--password ${password}"/>
        </exec>

        <exec executable="svn" failifexecutionfails="yes" failonerror="yes">
            <arg value="commit"/>
            <arg line="--username ${username}"/>
            <arg line="--password ${password}"/>
            <arg value="-m"/>
            <arg value="test-report"/>
        </exec>
    </target>

    <target name="clean.report">
        <delete dir="${reportdir}"/>
    </target>

    <target name="clean.total" depends="clean, clean.native2ascii, clean.report"/>

    <target name="team.first">
        <exec executable="svn" failifexecutionfails="yes" failonerror="yes" >
            <arg value="checkout" />
            <arg value="-rPREV" />
            <arg value="${url}" />
            <arg value="first" />
        </exec>

        <exec executable="ant" failifexecutionfails="yes" failonerror="yes" dir="first" >
            <arg value="build" />
        </exec>

        <mkdir dir="last" />
        <copy failonerror="yes" file="first/build/artifacts/${jarname}.jar" todir="last"/>
    </target>

    <target name="team.second" depends="team.first">
        <exec executable="svn" failifexecutionfails="yes" failonerror="yes" dir="first" >
            <arg value="checkout" />
            <arg value="-rPREV" />
            <arg value="${url}" />
            <arg value="../second" />
        </exec>

        <exec executable="ant" failifexecutionfails="yes" failonerror="yes" dir="second" >
            <arg value="build" />
        </exec>

        <copy failonerror="yes" file="second/build/artifacts/${jarname}.jar" todir="last"/>
    </target>

    <target name="team.third" depends="team.second">
        <exec executable="svn" failifexecutionfails="yes" failonerror="yes" dir="second" >
            <arg value="checkout" />
            <arg value="-rPREV" />
            <arg value="${url}" />
            <arg value="../third" />
        </exec>

        <exec executable="ant" failifexecutionfails="yes" failonerror="yes" dir="third" >
            <arg value="build" />
        </exec>

        <copy failonerror="yes" file="third/build/artifacts/${jarname}.jar" todir="last"/>
    </target>

    <target name="team" depends="team.third">
        <zip destfile="Last.zip" basedir="last" />
    </target>

</project>